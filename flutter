import 'package:flutter/material.dart';
import 'package:speech_recognition/speech_recognition.dart';

class FrgName extends StatelessWidget{
  @override
    Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: VoiceHome(),
    );
    }
}

class VoiceHome extends StatefulWidget{
  @override
  _VoiceHomeState createState() => _VoiceHomeState();
}
class _VoiceHomeState extends State<VoiceHome>{
  SpeechRecognition _speechRecognition;
  bool _isAvailable = false;
  bool _isListening =  false;

  String resultText = "";

  @override 
  void initState(){
    super.initState();
  }

  void initSpeechRecognizer(){
    _speechRecognition = SpeechRecognition();

    _speechRecognition
    .activate()
    .then((result) => setState(() => _isAvailable = result));

    _speechRecognition.setAvailabilityHandler(
      (bool result) => setState(() => _isAvailable = result),
    );
    _speechRecognition.setRecognitionStartedHandler(
      () => setState (() => _isListening = true),
    );
    _speechRecognition.setRecognitionResultHandler(
      (String speech) => setState(() => resultText = speech),
    );
    _speechRecognition.setRecognitionCompleteHandler(
      () => setState(() => _isListening = false),
    );
    _speechRecognition.activate().then(
    (result) => setState(() => _isAvailable = result),
    );
  }
  @override
  Widget build(BuildContext context) {
      return Scaffold(
        body: Container(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: <Widget>[
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  FloatingActionButton(
                    child: Icon(Icons.mic),
                    onPressed: (){
                      if(_isAvailable && !_isListening)
                      _speechRecognition
                      .listen(locale: "id_ID")
                      .then((result) => print('result : $result'));
                    },
                     heroTag: "mic",
                  ),
                ],
              ),
              Container(
                width: MediaQuery.of(context).size.width * 0.6,
                decoration: BoxDecoration(
                  color: Colors.greenAccent,
                ),
                child: Text(resultText, 
                      style: TextStyle(fontSize:24.0)),
              ),
            ],
          ),
        ),
      );
  }
}


